<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>main page</title>

</head>

<body>
    {{!-- HEADER --}}
    <div class="container" id="background"> 
        <div class="container">
            <h1 style="font-size: 36px;">Seja bem vindo Murilo!</h1>
            <h2 style="font-size: 20px;">Gestor de água e energia</h2>
        </div>

        {{!-- GRÁFICOS --}}
        <div id="graficos">
            {{!-- ENERGIA --}}
            <div>
                <div class="moldura-grafico">
                    <h3>Histórico de consumo de energia</h3>
                    <svg class="svg-grafico-energia" width="95%" height="100%"></svg>
                    <script src="https://d3js.org/d3.v7.min.js"></script>
                    <script>
                        document.addEventListener('DOMContentLoaded', () => {
                        fetch('/dados-energia')
                            .then(res => res.json())
                            .then(dados => {
                            const svg = d3.select(".svg-grafico-energia");
                            const width = parseInt(svg.style("width"));
                            const height = parseInt(svg.style("height"));
                            const margin = { top: 20, right: 30, bottom: 30, left: 40 };
                            const innerWidth = width - margin.left - margin.right;
                            const innerHeight = height - margin.top - margin.bottom;

                            const g = svg.append("g")
                                .attr("transform", `translate(${margin.left},${margin.top})`);

                            // Exemplo de estrutura: [{ tempo: "2024-01", consumo: 150 }, ...]
                            const parseTime = d3.timeParse("%Y-%m");
                            dados.forEach(d => {
                                d.tempo = parseTime(d.tempo);
                                d.consumo = +d.consumo;
                            });

                            const x = d3.scaleTime()
                                .domain(d3.extent(dados, d => d.tempo))
                                .range([0, innerWidth]);

                            const y = d3.scaleLinear()
                                .domain([0, d3.max(dados, d => d.consumo)])
                                .range([innerHeight, 0]);

                            const line = d3.line()
                                .x(d => x(d.tempo))
                                .y(d => y(d.consumo));

                            g.append("g")
                                .attr("transform", `translate(0,${innerHeight})`)
                                .call(d3.axisBottom(x));

                            g.append("g")
                                .call(d3.axisLeft(y));

                            g.append("path")
                                .datum(dados)
                                .attr("fill", "none")
                                .attr("stroke", "steelblue")
                                .attr("stroke-width", 2)
                                .attr("d", line);
                            });
                        });
                    </script>
                    <form action="selecionar-grafico-energia">
                        <p>Comparar com:</p>
                        
                        <input class="radio" type="radio" id="ninguem-energia" name="seletor-grafico-energia" value="ninguem" checked>
                        <label class="botao-comparar" for="ninguem-energia"></label>
                        <p>Ninguém</p>
    
                        <input class="radio" type="radio" id="media-usuarios-energia" name="seletor-grafico-energia" value="media-usuarios">
                        <label class="botao-comparar" for="media-usuarios-energia"></label>
                        <p>Média dos usuários</p>
    
                        <input class="radio" type="radio" id="metas-sustentaveis-energia" name="seletor-grafico-energia" value="metas-sustentaveis">
                        <label class="botao-comparar" for="metas-sustentaveis-energia"></label>
                        <p>Metas sustentáveis</p>
                    </form>
                </div>
                <div class="container-adicionar-conta">
                    <p>Adicionar conta de energia</p>
                    <button onclick="abrirModalEnergia()" class="adicionar-conta"></button>
                </div>
            </div>
            {{!-- ÁGUA --}}
            <div>
                <div class="moldura-grafico">
                    <h3>Histórico de consumo de água</h3>
                    <svg class="svg-grafico-agua" width="750px" height="350px"></svg>
                    <script>
                        document.addEventListener('DOMContentLoaded', () => {
                        fetch('/dados-agua')
                            .then(res => res.json())
                            .then(dados => {
                            const svg = d3.select(".svg-grafico-agua");
                            const width = parseInt(svg.style("width"));
                            const height = parseInt(svg.style("height"));
                            const margin = { top: 20, right: 30, bottom: 30, left: 40 };
                            const innerWidth = width - margin.left - margin.right;
                            const innerHeight = height - margin.top - margin.bottom;

                            const g = svg.append("g")
                                .attr("transform", `translate(${margin.left},${margin.top})`);

                            // Exemplo de estrutura: [{ tempo: "2024-01", consumo: 150 }, ...]
                            const parseTime = d3.timeParse("%Y-%m");
                            dados.forEach(d => {
                                d.tempo = parseTime(d.tempo);
                                d.consumo = +d.consumo;
                            });

                            const x = d3.scaleTime()
                                .domain(d3.extent(dados, d => d.tempo))
                                .range([0, innerWidth]);

                            const y = d3.scaleLinear()
                                .domain([0, d3.max(dados, d => d.consumo)])
                                .range([innerHeight, 0]);

                            const line = d3.line()
                                .x(d => x(d.tempo))
                                .y(d => y(d.consumo));

                            g.append("g")
                                .attr("transform", `translate(0,${innerHeight})`)
                                .call(d3.axisBottom(x));

                            g.append("g")
                                .call(d3.axisLeft(y));

                            g.append("path")
                                .datum(dados)
                                .attr("fill", "none")
                                .attr("stroke", "steelblue")
                                .attr("stroke-width", 2)
                                .attr("d", line);
                            });
                        });
                    </script>
                    <form action="selecionar-grafico-agua">
                        <p>Comparar com:</p>
                        
                        <input class="radio" type="radio" id="ninguem-agua" name="seletor-grafico-agua" value="ninguem" checked>
                        <label class="botao-comparar" for="ninguem-agua"></label>
                        <p>Ninguém</p>
    
                        <input class="radio" type="radio" id="media-usuarios-agua" name="seletor-grafico-agua" value="media-usuarios">
                        <label class="botao-comparar" for="media-usuarios-agua"></label>
                        <p>Média dos usuários</p>
    
                        <input class="radio" type="radio" id="metas-sustentaveis-agua" name="seletor-grafico-agua" value="metas-sustentaveis">
                        <label class="botao-comparar" for="metas-sustentaveis-agua"></label>
                        <p>Metas sustentáveis</p>
                    </form>
                </div>
                <div class="container-adicionar-conta">
                    <p>Adicionar conta de água</p>
                    <button onclick="abrirModalAgua()" class="adicionar-conta"></button>
                </div>
            </div>
        </div>

        {{!-- DICAS --}}
        <div id="dicas">
            <h3>Dicas para economizar</h3>
            <div>
                <p>---------</p>
            </div>
        </div>
    </div>

    <!-- MODAL -->
    <div id="meuModalAgua" class="modal">
        <div class="modal-conteudo">
            <h2>Adicionar conta de água</h2>
            <form id="form-agua" class="form-nova-conta" action="">
                <div>
                    <label for="tempo">Data: </label>
                    <input id="seletor-mes-agua" type="month" name="tempo-agua" class="seletor-mes">
                </div>
                <div>
                    <label for="consumo">Consumo: </label>
                    <input type="text" name="consumo-agua">
                </div>
                <div>
                    <button style="background-color: #2d2e47;" type="button" class="voltar-button" onclick="fecharModalAgua()">Voltar</button>
                    <button type="submit">Enviar</button>
                </div>
            </form>
        </div>
    </div>

    <div id="meuModalEnergia" class="modal">
        <div class="modal-conteudo">
            <h2>Adicionar conta de energia</h2>
            <form id="form-energia" class="form-nova-conta" action="">
                <div>
                    <label for="tempo">Data: </label>
                    <input id="seletor-mes-energia" type="month" name="tempo-energia" class="seletor-mes">
                    
                </div>
                <div>
                    <label for="consumo">Consumo: </label>
                    <input type="text" name="consumo-energia">
                </div>
                <div>
                    <button style="background-color: #2d2e47;" type="button" class="voltar-button" onclick="fecharModalEnergia()">Voltar</button>
                    <button type="submit">Enviar</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        function abrirModalAgua() {
            document.getElementById("meuModalAgua").style.display = "block";
        }

        function abrirModalEnergia() {
            document.getElementById("meuModalEnergia").style.display = "block";
        }

        function fecharModalAgua() {
            document.getElementById("meuModalAgua").style.display = "none";
        }

        function fecharModalEnergia() {
            document.getElementById("meuModalEnergia").style.display = "none";
        }

        function getMesAnoFormatado(date) {
            const ano = date.getFullYear();
            const mes = String(date.getMonth() + 1).padStart(2, '0');
            return `${ano}-${mes}`;
        }
    </script>

    <script>
        document.getElementById('form-energia').addEventListener('submit', function (e) {
            e.preventDefault();

            const tempoInput = document.querySelector('input[name="tempo-energia"]');
            const consumoInput = document.querySelector('input[name="consumo-energia"]');

            const tempo = tempoInput.value.trim();
            const consumo = consumoInput.value.trim();

            console.log("Mês:", tempo);
            console.log("Consumo:", consumo);

            if (!tempo || !consumo || isNaN(consumo)) {
                alert('Preencha todos os campos corretamente.');
                return;
            }

            fetch('/adicionar-energia', {
                method: 'POST',
                headers: {
                'Content-Type': 'application/json'
                },
                body: JSON.stringify({ tempo: tempo, consumo: parseFloat(consumo) })
            })
            .then(res => res.json())
            .then(res => {
                alert('Dados salvos com sucesso!');
                fecharModalEnergia();
            })
            .catch(err => {
                alert('Erro ao salvar os dados.');
                console.error(err);
            });
        });
    </script>

    <script>
        document.getElementById('form-agua').addEventListener('submit', function (e) {
            e.preventDefault();

            const tempoInput = document.querySelector('input[name="tempo-agua"]');
            const consumoInput = document.querySelector('input[name="consumo-agua"]');

            const tempo = tempoInput.value.trim();
            const consumo = consumoInput.value.trim();

            console.log("Mês:", tempo);
            console.log("Consumo:", consumo);

            if (!tempo || !consumo || isNaN(consumo)) {
                alert('Preencha todos os campos corretamente.');
                return;
            }

            fetch('/adicionar-agua', {
                method: 'POST',
                headers: {
                'Content-Type': 'application/json'
                },
                body: JSON.stringify({ tempo: tempo, consumo: parseFloat(consumo) })
            })
            .then(res => res.json())
            .then(res => {
                alert('Dados salvos com sucesso!');
                fecharModalEnergia();
            })
            .catch(err => {
                alert('Erro ao salvar os dados.');
                console.error(err);
            });
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const inputMes = document.getElementById('seletor-mes-agua');

            const hoje = new Date();
            const cincoMesesAtras = new Date();
            cincoMesesAtras.setMonth(hoje.getMonth() - 5);

            inputMes.min = getMesAnoFormatado(cincoMesesAtras);
            inputMes.max = getMesAnoFormatado(hoje);
        });                       

        document.addEventListener('DOMContentLoaded', function () {
            const inputMes = document.getElementById('seletor-mes-energia');

            const hoje = new Date();
            const cincoMesesAtras = new Date();
            cincoMesesAtras.setMonth(hoje.getMonth() - 5);

            inputMes.min = getMesAnoFormatado(cincoMesesAtras);
            inputMes.max = getMesAnoFormatado(hoje);
        });
    </script>
</body>

</html>